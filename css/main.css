/* Put your code here */
.grid {
  display: grid;

  /* grid-template-rows: 100px 200px;
  grid-template-columns: 200px auto 150px; */
  grid-template: [ row1-start ] 100px [row1-end row2-start] 200px / 200px auto 150px; /* shorthand for above */

  grid-gap: 10px 10px; /* row-gap column-gap */
}

/* re-arranging grid elements */
.grid div:nth-child(5) {
  /* the values 1 and 2 for row start and end signify the horizontal grid lines */
  /* the values 1 and 3 for column start and end signify the vertical grid lines */

  /* grid-row-start: 1;
  grid-row-end: 2;
  grid-column-start: 1;
  grid-column-end: 3; */

  /* shorthand for the above: */
  grid-row: 1 / 2; /* can also be written as row1-start / row1-end ... but this can be lengthy */
  grid-column: 1 / 3;
}

.grid div:nth-child(6) {
  /* ^^ in above example, we made the re-aranged cells of unit legth and height
      We can easily make them span multiple cells by increasing the 'end' value
      The grid will automatically create new rows or columns to accomodate the cell size change
      The automatically created space is called the implicit grid
    */

  grid-row: 2 / 4; /* spans two rows, from horizontal grid-line 2 to 4 */
  grid-column: 1 / 2;
}

/* now make item 1 always span two rows */
.grid div:nth-child(1) {
  grid-row: auto / span 2; /* spans two cells from current position horizontally */
}
